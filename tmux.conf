# move between panes by vi-keybinds
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes by vi-keybinds
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# change the way to split a pane vertically
bind | split-window -h -c '#{pane_current_path}'

# change the way to split a pane horizontally
bind - split-window -v -c '#{pane_current_path}'

# create new window based on current directory
# bind c new-window -c '#{pane_current_path}'

# reduce the delay of key strokes
set -sg escape-time 1

# reload this configuration file
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# make an active window stand out
# setw -g window-status-current-fg black
# setw -g window-status-current-bg red
# setw -g window-status-current-attr bright

# status bar color
set -g status-bg blue
set -g status-fg black

# use 256-colors terminal
set-option -g default-terminal screen-256color

# change the prefix key
set -g prefix C-a
unbind C-b

# window index starts from 1
set -g base-index 1

# configure the copy mode
# enable vi-keybinds
set-window-option -g mode-keys vi
# enable vi-like copy mode operation
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# Provide an alternative way to clear screen (<prefix> <C-l>)
bind C-l send-keys 'C-l'
