[toplevel]

whoami = sts get-caller-identity

ppchk =
  !f() {
    set -e

    pipeline_name="$1"

    if [ -z $pipeline_name ]
    then
      pipeline_name=$(aws codepipeline list-pipelines |jq -r '.pipelines[].name' |fzf --header="check pipeline status")
    fi

    aws codepipeline get-pipeline-state --name "$pipeline_name" |
      jq -r '.stageStates[]' |
      jq -r '. |walk(if try todate catch false then todate else . end)' |
      jq -r '.stageName,.actionStates[]'
  }; f

ppwait =
  !f() {
    set -e

    pipeline_name="$1"

    if [ -z $pipeline_name ]
    then
      pipeline_name=$(aws codepipeline list-pipelines |jq -r '.pipelines[].name' |fzf --header="check pipeline status")
    fi

    for i in `seq 60`
    do
      inprogress=$(aws codepipeline get-pipeline-state --name "$pipeline_name" |
        jq -r 'reduce .stageStates[].actionStates[] as $state (false; . | $state == "InProgress")')
      if [ "$inprogress" = "false" ]
      then
        break
      fi
      echo -n "."
    done

    echo "done"
  }; f

cfnchk =
  !f() {
    set -e

    stack_name="$1"

    if [ -z $stack_name ]
    then
      stack_name=$(aws cloudformation describe-stacks |jq -r '.Stacks[].StackName' |fzf --header="check CFn stack events")
    fi

    aws cloudformation describe-stack-events --stack-name "$stack_name" |jq -r '.StackEvents[] |select(.ResourceStatus |endswith("FAILED"))'
  }; f

cfndl =
  !f() {
    set -e

    stack_name="$1"

    if [ -z $stack_name ]
    then
      stack_name=$(aws cloudformation describe-stacks |jq -r '.Stacks[].StackName' |fzf --header="DELETE CFn stack")
    fi

    aws cloudformation delete-stack --stack-name "$stack_name"
  }; f

cfnwait =
  !f() {
    set -e

    stack_name="$1"

    if [ -z $stack_name ]
    then
      stack_name=$(aws cloudformation describe-stacks |jq -r '.Stacks[].StackName' |fzf --header="wait CFn stack update")
    fi

    for i in `seq 60`
    do
      status=$(aws cloudformation describe-stacks --stack-name "$stack_name" |jq -r '.Stacks[0].StackStatus')
      echo -n "."
      if [ ! "$status" = "UPDATE_IN_PROGRESS" ]
      then
        break
      fi
      sleep 1
    done

    echo "$status"
  }; f

cfndp =
  !f() {
    set -e

    template_file="$1"
    stack_name="$2"
    parameters="$@"

    if [ -z $template_file ]
    then
      template_file=$(fzf --header="deploy stack template")
    fi

    if [ -z $stack_name ]
    then
      read -p "Stack Name: " stack_name
    fi

    aws cloudformation deploy \
      --template-file $template_file \
      --stack-name $stack_name \
      --parameter-overrides $parameters \
      --capabilities CAPABILITY_NAMED_IAM
  }; f

cfnup =
  !f() {
    set -e

    stack_name="$1"
    template_file="$2"

    if [ -z $stack_name ]
    then
      stack_name=$(aws cloudformation describe-stacks |jq -r '.Stacks[].StackName' |fzf --header="update CFn stack")
    fi

    if [ -z $template_file ]
    then
      template_file=$(fzf --header="select template file to upload")
    fi

    template_body="file://${template_file}"

    parameters=""
    for p in $(aws cloudformation describe-stacks --stack-name $stack_name |jq -r '.Stacks[].Parameters[].ParameterKey')
    do
      parameters="$parameters ParameterKey=$p,UsePreviousValue=true"
    done

    aws cloudformation update-stack \
      --stack-name $stack_name \
      --template-body $template_body \
      --parameters $parameters \
      --capabilities CAPABILITY_NAMED_IAM
  }; f
